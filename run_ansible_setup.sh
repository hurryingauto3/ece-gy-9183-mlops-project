#!/bin/bash

# run_ansible_setup.sh
# Executes the initial Ansible playbook to set up VMs (Docker, Compose, code copy).

# Exit immediately if a command exits with a non-zero status.
set -e
# Print commands and their arguments as they are executed.
set -x

# --- Configuration ---
PROJECT_ROOT="$(cd "$(dirname "$0")/." && pwd)" # Get absolute path of project root
ANSIBLE_DIR="$PROJECT_ROOT/devops/ansible"
ANSIBLE_INVENTORY="${ANSIBLE_DIR}/inventory.ini"
ANSIBLE_PLAYBOOK="vm_setup.yaml" # Name of the Ansible playbook for initial setup

# --- Main Execution ---
echo "--- Starting Initial Ansible Setup ---"

# Navigate to the Ansible directory
echo "Navigating to Ansible directory: $ANSIBLE_DIR"
if [ ! -d "$ANSIBLE_DIR" ]; then
    echo "Error: Ansible directory not found at $ANSIBLE_DIR"
    exit 1
fi
cd "$ANSIBLE_DIR"

# Check if the inventory file exists (should have been generated by Terraform)
echo "Checking for Ansible inventory: $ANSIBLE_INVENTORY"
if [ ! -f "$ANSIBLE_INVENTORY" ]; then
    echo "Error: Ansible inventory file not found at $ANSIBLE_INVENTORY."
    echo "Please ensure Terraform provisioning completed successfully and generated the inventory."
    exit 1
fi
echo "Ansible inventory found."

# Check if the Ansible playbook exists
echo "Checking for Ansible playbook: $ANSIBLE_PLAYBOOK"
if [ ! -f "$ANSIBLE_PLAYBOOK" ]; then
    echo "Error: Ansible playbook file not found at $ANSIBLE_PLAYBOOK"
    echo "Please ensure devops/ansible/$ANSIBLE_PLAYBOOK exists."
    exit 1
fi
echo "Ansible playbook found."

# Check if .env file exists in the project root (needed for copying)
ENV_FILE_PATH="$PROJECT_ROOT/.env"
echo "Checking for .env file at: $ENV_FILE_PATH"
if [ ! -f "$ENV_FILE_PATH" ]; then
    echo "Error: .env file not found at $ENV_FILE_PATH."
    echo "Please create a .env file in your project root with necessary configuration."
    exit 1
fi
echo ".env file found."


# Run the Ansible playbook
echo "Running Ansible playbook: $ANSIBLE_PLAYBOOK"

# Export PROJECT_ROOT environment variable for Ansible lookup
export PROJECT_ROOT="$PROJECT_ROOT"
echo "Exported PROJECT_ROOT=${PROJECT_ROOT} for Ansible lookup."

# Use -i to specify the inventory file
# Use --ssh-common-args='-o StrictHostKeyChecking=no' to avoid SSH key prompts (WARNING in production)
# In production, pre-configure known_hosts or use Ansible's host key checking features.
ansible-playbook "$ANSIBLE_PLAYBOOK" -i "$ANSIBLE_INVENTORY" --ssh-common-args='-o StrictHostKeyChecking=no'

# Check the exit status of the playbook run
if [ $? -ne 0 ]; then
    echo "--- Ansible Setup Failed ---"
    exit 1
fi

echo "--- Initial Ansible Setup Complete ---"
echo "VMs have Docker/Compose installed and project code copied."
echo "You can now proceed to run the full deployment workflow script."

exit 0