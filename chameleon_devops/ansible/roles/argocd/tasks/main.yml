---
# 0) Install system Kubernetes Python client
- name: Install system Kubernetes Python client
  ansible.builtin.apt:
    name: python3-kubernetes
    state: present
  become: true

# 1) Install Helm 3 if it isn't already there
- name: Ensure Helm 3 is installed
  ansible.builtin.shell: |
    if ! command -v helm >/dev/null 2>&1; then
      curl -fsSL https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
    fi
  args:
    executable: /bin/bash
  become: true

# 2) Now we can safely use the Helm modules
- name: Add Argo Workflows Helm repo
  kubernetes.core.helm_repository:
    name: argo-wf
    repo_url: https://argoproj.github.io/argo-helm

- name: Install Argo Workflows
  kubernetes.core.helm:
    chart_ref: argo-wf/argo-workflows
    release_name: argo-workflows
    namespace: argo
    create_namespace: false   # namespace already made
    values:
      controller:
        serviceAccount:
          create: true

- name: Wait for ArgoCD server to be ready
  kubernetes.core.k8s_info:
    api_version: apps/v1
    kind: Deployment
    namespace: argocd
    name: argocd-server
  register: argo_svc
  until:
    - argo_svc.resources | length > 0
    - (argo_svc.resources[0].status.readyReplicas | default(0))
      == (argo_svc.resources[0].status.replicas | default(1))
  retries: 12
  delay: 10
  environment:
    KUBECONFIG: "{{ ansible_env.HOME }}/.kube/config"