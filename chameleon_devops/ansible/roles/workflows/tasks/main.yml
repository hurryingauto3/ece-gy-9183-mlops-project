---
# 0) Create the namespace your workflows live in
- name: Ensure mlops namespace exists
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: mlops
    state: present

# 1) Ensure the “argo” namespace for Workflows exists
- name: Ensure the argo namespace exists
  kubernetes.core.k8s:
    api_version: v1
    kind: Namespace
    name: argo
    state: present

- name: Install Argo Workflows (CRDs & Controller)
  shell: kubectl apply -n argo -f https://github.com/argoproj/argo-workflows/releases/download/v3.6.7/install.yaml
  register: argo_install
  until: argo_install.rc == 0
  retries: 5
  delay: 5

# 4) Wait for the correct Deployment name
- name: Wait for the Workflow Controller to be ready
  shell: kubectl rollout status deployment/workflow-controller -n argo
  register: rollout_wf
  until: rollout_wf.rc == 0
  retries: 20
  delay: 6

# 5) Apply your MLops manifests into the mlops namespace
- name: Deploy drift ConfigMap
  kubernetes.core.k8s:
    definition: "{{ lookup('file', playbook_dir + '/../k8s/workflows/drift-configmap.yml') }}"

- name: Deploy drift‑detection CronWorkflow
  kubernetes.core.k8s:
    definition: "{{ lookup('file', playbook_dir + '/../k8s/workflows/drift-detection-cronworkflow.yml') }}"

- name: Deploy retraining Workflow
  kubernetes.core.k8s:
    definition: "{{ lookup('file', playbook_dir + '/../k8s/workflows/retraining-workflow.yml') }}"

- name: Register MLops workflows in ArgoCD
  kubernetes.core.k8s:
    definition: "{{ lookup('template', 'argocd-app-mlops.yaml.j2') }}"
